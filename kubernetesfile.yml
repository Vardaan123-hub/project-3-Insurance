apiVersion: apps/v1
kind: Deployment
metadata:
  name: insurance-app
  labels:
    app: insurance-app
  annotations:
    description: "Deployment of Insurance application with health checks and resource limits"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: insurance-app
  template:
    metadata:
      labels:
        app: insurance-app
      annotations:
        maintainer: "your-email@example.com"
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
    spec:
      containers:
        - name: insurance-container
          image: vardaandocker/insurance-tuesday:latest
          ports:
            - containerPort: 8081
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"
            - name: JAVA_OPTS
              value: "-Xms128m -Xmx256m"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
---
apiVersion: v1
kind: Service
metadata:
  name: insurance-service
  labels:
    app: insurance-app
  annotations:
    description: "Exposes insurance app via LoadBalancer"
spec:
  selector:
    app: insurance-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8081
  type: LoadBalancer
